{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VApp.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { createLayout, makeLayoutProps } from \"../../composables/layout.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVAppProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeLayoutProps({\n    fullHeight: true\n  }),\n  ...makeThemeProps()\n}, 'VApp');\nexport const VApp = genericComponent()({\n  name: 'VApp',\n  props: makeVAppProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const theme = provideTheme(props);\n    const {\n      layoutClasses,\n      getLayoutItem,\n      items,\n      layoutRef\n    } = createLayout(props);\n    const {\n      rtlClasses\n    } = useRtl();\n    useRender(() => _createVNode(\"div\", {\n      \"ref\": layoutRef,\n      \"class\": ['v-application', theme.themeClasses.value, layoutClasses.value, rtlClasses.value, props.class],\n      \"style\": [props.style]\n    }, [_createVNode(\"div\", {\n      \"class\": \"v-application__wrap\"\n    }, [slots.default?.()])]));\n    return {\n      getLayoutItem,\n      items,\n      theme\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}