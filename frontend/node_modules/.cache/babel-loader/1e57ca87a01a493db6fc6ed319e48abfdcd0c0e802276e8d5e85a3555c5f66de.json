{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/words';\nexport function useWords() {\n  const words = ref([]);\n  const currentWord = ref(null);\n  const state = reactive({\n    loading: false,\n    error: null\n  });\n  const fetchWords = async () => {\n    state.loading = true;\n    state.error = null;\n    try {\n      const response = await axios.get(API_URL);\n      words.value = response.data;\n      if (words.value.length > 0) {\n        currentWord.value = words.value[0];\n      }\n      console.log('Words fetched:', words.value);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n      state.error = 'Failed to fetch words. Please try again later.';\n    } finally {\n      state.loading = false;\n    }\n  };\n  const nextWord = () => {\n    if (words.value.length === 0) return;\n    const currentIndex = words.value.findIndex(w => w._id === currentWord.value._id);\n    const nextIndex = (currentIndex + 1) % words.value.length;\n    currentWord.value = words.value[nextIndex];\n  };\n  const addWord = async newWord => {\n    state.loading = true;\n    state.error = null;\n    try {\n      const response = await axios.post(API_URL, newWord);\n      words.value.push(response.data);\n      console.log('Word added:', response.data);\n    } catch (error) {\n      console.error('Error adding word:', error);\n      state.error = 'Failed to add word. Please try again later.';\n    } finally {\n      state.loading = false;\n    }\n  };\n  return {\n    words,\n    currentWord,\n    state,\n    fetchWords,\n    nextWord,\n    addWord\n  };\n}","map":{"version":3,"names":["ref","reactive","axios","API_URL","useWords","words","currentWord","state","loading","error","fetchWords","response","get","value","data","length","console","log","nextWord","currentIndex","findIndex","w","_id","nextIndex","addWord","newWord","post","push"],"sources":["C:/darija-linguist/frontend/src/composables/useWords.js"],"sourcesContent":["import { ref, reactive } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:5000/api/words'\r\n\r\nexport function useWords() {\r\n  const words = ref([])\r\n  const currentWord = ref(null)\r\n  const state = reactive({\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  const fetchWords = async () => {\r\n    state.loading = true\r\n    state.error = null\r\n    try {\r\n      const response = await axios.get(API_URL)\r\n      words.value = response.data\r\n      if (words.value.length > 0) {\r\n        currentWord.value = words.value[0]\r\n      }\r\n      console.log('Words fetched:', words.value)\r\n    } catch (error) {\r\n      console.error('Error fetching words:', error)\r\n      state.error = 'Failed to fetch words. Please try again later.'\r\n    } finally {\r\n      state.loading = false\r\n    }\r\n  }\r\n\r\n  const nextWord = () => {\r\n    if (words.value.length === 0) return\r\n    const currentIndex = words.value.findIndex(w => w._id === currentWord.value._id)\r\n    const nextIndex = (currentIndex + 1) % words.value.length\r\n    currentWord.value = words.value[nextIndex]\r\n  }\r\n\r\n  const addWord = async (newWord) => {\r\n    state.loading = true\r\n    state.error = null\r\n    try {\r\n      const response = await axios.post(API_URL, newWord)\r\n      words.value.push(response.data)\r\n      console.log('Word added:', response.data)\r\n    } catch (error) {\r\n      console.error('Error adding word:', error)\r\n      state.error = 'Failed to add word. Please try again later.'\r\n    } finally {\r\n      state.loading = false\r\n    }\r\n  }\r\n\r\n  return { \r\n    words, \r\n    currentWord, \r\n    state, \r\n    fetchWords, \r\n    nextWord, \r\n    addWord \r\n  }\r\n}"],"mappings":";AAAA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,MAAMC,KAAK,GAAGL,GAAG,CAAC,EAAE,CAAC;EACrB,MAAMM,WAAW,GAAGN,GAAG,CAAC,IAAI,CAAC;EAC7B,MAAMO,KAAK,GAAGN,QAAQ,CAAC;IACrBO,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BH,KAAK,CAACC,OAAO,GAAG,IAAI;IACpBD,KAAK,CAACE,KAAK,GAAG,IAAI;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACT,OAAO,CAAC;MACzCE,KAAK,CAACQ,KAAK,GAAGF,QAAQ,CAACG,IAAI;MAC3B,IAAIT,KAAK,CAACQ,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;QAC1BT,WAAW,CAACO,KAAK,GAAGR,KAAK,CAACQ,KAAK,CAAC,CAAC,CAAC;MACpC;MACAG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEZ,KAAK,CAACQ,KAAK,CAAC;IAC5C,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CF,KAAK,CAACE,KAAK,GAAG,gDAAgD;IAChE,CAAC,SAAS;MACRF,KAAK,CAACC,OAAO,GAAG,KAAK;IACvB;EACF,CAAC;EAED,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIb,KAAK,CAACQ,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IAC9B,MAAMI,YAAY,GAAGd,KAAK,CAACQ,KAAK,CAACO,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKhB,WAAW,CAACO,KAAK,CAACS,GAAG,CAAC;IAChF,MAAMC,SAAS,GAAG,CAACJ,YAAY,GAAG,CAAC,IAAId,KAAK,CAACQ,KAAK,CAACE,MAAM;IACzDT,WAAW,CAACO,KAAK,GAAGR,KAAK,CAACQ,KAAK,CAACU,SAAS,CAAC;EAC5C,CAAC;EAED,MAAMC,OAAO,GAAG,MAAOC,OAAO,IAAK;IACjClB,KAAK,CAACC,OAAO,GAAG,IAAI;IACpBD,KAAK,CAACE,KAAK,GAAG,IAAI;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACwB,IAAI,CAACvB,OAAO,EAAEsB,OAAO,CAAC;MACnDpB,KAAK,CAACQ,KAAK,CAACc,IAAI,CAAChB,QAAQ,CAACG,IAAI,CAAC;MAC/BE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,QAAQ,CAACG,IAAI,CAAC;IAC3C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CF,KAAK,CAACE,KAAK,GAAG,6CAA6C;IAC7D,CAAC,SAAS;MACRF,KAAK,CAACC,OAAO,GAAG,KAAK;IACvB;EACF,CAAC;EAED,OAAO;IACLH,KAAK;IACLC,WAAW;IACXC,KAAK;IACLG,UAAU;IACVQ,QAAQ;IACRM;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}