{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'DarijaLinguist',\n  setup() {\n    const words = ref([]);\n    const currentIndex = ref(0);\n    const loading = ref(false);\n    const error = ref(null);\n    const phoneticDialog = ref(false);\n    const suggestedPhonetic = ref('');\n    const isRecording = ref(false);\n    const audioUrl = ref('');\n    const feedback = ref('');\n    let mediaRecorder = null;\n    let audioChunks = [];\n    const fetchWords = async () => {\n      loading.value = true;\n      error.value = null;\n      try {\n        const response = await axios.get('http://localhost:5000/api/words');\n        words.value = response.data;\n      } catch (err) {\n        error.value = 'Failed to fetch words. Please try again.';\n        console.error('Error fetching words:', err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const currentWord = computed(() => words.value[currentIndex.value]);\n    const nextWord = () => {\n      currentIndex.value = (currentIndex.value + 1) % words.value.length;\n    };\n    const previousWord = () => {\n      currentIndex.value = (currentIndex.value - 1 + words.value.length) % words.value.length;\n    };\n    const speak = text => {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'ar-MA'; // Moroccan Arabic\n      speechSynthesis.speak(utterance);\n    };\n    const speakWord = () => {\n      if (currentWord.value) {\n        speak(currentWord.value.darija);\n      }\n    };\n    const speakExample = example => {\n      speak(example);\n    };\n    const openPhoneticDialog = () => {\n      suggestedPhonetic.value = currentWord.value ? currentWord.value.phonetic : '';\n      phoneticDialog.value = true;\n    };\n    const startRecording = async () => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorder = new MediaRecorder(stream);\n      mediaRecorder.start();\n      isRecording.value = true;\n      audioChunks = [];\n      mediaRecorder.addEventListener(\"dataavailable\", event => {\n        audioChunks.push(event.data);\n      });\n      mediaRecorder.addEventListener(\"stop\", () => {\n        const audioBlob = new Blob(audioChunks);\n        audioUrl.value = URL.createObjectURL(audioBlob);\n        isRecording.value = false;\n      });\n    };\n    const stopRecording = () => {\n      mediaRecorder.stop();\n    };\n    const submitPhoneticSuggestion = async () => {\n      if (currentWord.value && suggestedPhonetic.value) {\n        try {\n          feedback.value = 'Submitting suggestion...';\n          console.log('Current word:', currentWord.value);\n          console.log('Suggestion data:', {\n            suggestedPhonetic: suggestedPhonetic.value,\n            audioUrl: audioUrl.value\n          });\n          const response = await axios.post(`http://localhost:5000/api/words/${currentWord.value._id}/phonetic-suggestion`, {\n            suggestedPhonetic: suggestedPhonetic.value,\n            audioUrl: audioUrl.value\n          });\n          console.log('Server response:', response.data);\n          feedback.value = 'Suggestion submitted successfully!';\n          setTimeout(() => {\n            phoneticDialog.value = false;\n            feedback.value = '';\n            suggestedPhonetic.value = '';\n            audioUrl.value = '';\n          }, 2000);\n        } catch (err) {\n          console.error('Error submitting phonetic suggestion:', err);\n          if (err.response) {\n            console.error('Response data:', err.response.data);\n            console.error('Response status:', err.response.status);\n            console.error('Response headers:', err.response.headers);\n          } else if (err.request) {\n            console.error('No response received:', err.request);\n          } else {\n            console.error('Error setting up request:', err.message);\n          }\n          feedback.value = `Error submitting suggestion: ${err.response ? err.response.data.message : err.message}`;\n        }\n      } else {\n        feedback.value = 'Please enter a suggested pronunciation.';\n      }\n    };\n    onMounted(fetchWords);\n    return {\n      currentWord,\n      nextWord,\n      previousWord,\n      speakWord,\n      speakExample,\n      loading,\n      error,\n      phoneticDialog,\n      suggestedPhonetic,\n      openPhoneticDialog,\n      submitPhoneticSuggestion,\n      startRecording,\n      stopRecording,\n      isRecording,\n      audioUrl,\n      feedback\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","name","setup","words","currentIndex","loading","error","phoneticDialog","suggestedPhonetic","isRecording","audioUrl","feedback","mediaRecorder","audioChunks","fetchWords","value","response","get","data","err","console","currentWord","nextWord","length","previousWord","speak","text","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","speakWord","darija","speakExample","example","openPhoneticDialog","phonetic","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","start","addEventListener","event","push","audioBlob","Blob","URL","createObjectURL","stopRecording","stop","submitPhoneticSuggestion","log","post","_id","setTimeout","status","headers","request","message"],"sources":["C:\\darija-linguist\\frontend\\src\\components\\DarijaLinguist.vue"],"sourcesContent":["<template>\r\n    <v-container class=\"darija-linguist\">\r\n      <h1 class=\"text-h3 mb-6 text-center primary--text\">Open Darija</h1>\r\n  \r\n      <v-card v-if=\"loading\" class=\"text-center pa-6\">\r\n        <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\r\n      </v-card>\r\n  \r\n      <v-alert v-else-if=\"error\" type=\"error\" class=\"mb-6\">{{ error }}</v-alert>\r\n  \r\n      <v-row v-else-if=\"currentWord\">\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <v-card class=\"mb-6\">\r\n            <v-card-title class=\"text-h4 justify-center darija-font\">{{ currentWord.darija }}</v-card-title>\r\n            <v-card-subtitle class=\"text-h6 text-center\">{{ currentWord.phonetic }}</v-card-subtitle>\r\n            <v-card-text class=\"text-center\">\r\n              <v-btn color=\"primary\" @click=\"speakWord\" class=\"mx-2\">\r\n                <v-icon left>mdi-volume-high</v-icon> Speak\r\n              </v-btn>\r\n              <v-btn color=\"secondary\" @click=\"openPhoneticDialog\" class=\"mx-2\">\r\n                Suggest Correction\r\n              </v-btn>\r\n            </v-card-text>\r\n          </v-card>\r\n  \r\n          <v-card class=\"mb-6\">\r\n            <v-card-title>Word Details</v-card-title>\r\n            <v-card-text>\r\n              <v-row>\r\n                <v-col cols=\"12\">\r\n                  <strong>Arabic Script:</strong> <span class=\"darija-font\">{{ currentWord.arabicScript }}</span>\r\n                </v-col>\r\n                <v-col cols=\"12\">\r\n                  <strong>MSA Equivalent:</strong> <span class=\"darija-font\">{{ currentWord.msaEquivalent }}</span>\r\n                </v-col>\r\n                <v-col cols=\"12\">\r\n                  <strong>Region:</strong> {{ currentWord.region }}\r\n                </v-col>\r\n              </v-row>\r\n            </v-card-text>\r\n          </v-card>\r\n  \r\n          <v-card-actions class=\"justify-center\">\r\n            <v-btn @click=\"previousWord\" class=\"mx-2\">\r\n              <v-icon left>mdi-chevron-left</v-icon> Previous\r\n            </v-btn>\r\n            <v-btn @click=\"nextWord\" class=\"mx-2\">\r\n              Next <v-icon right>mdi-chevron-right</v-icon>\r\n            </v-btn>\r\n          </v-card-actions>\r\n        </v-col>\r\n  \r\n        <v-col cols=\"12\" md=\"6\">\r\n          <v-card>\r\n            <v-card-title>Examples</v-card-title>\r\n            <v-card-text>\r\n              <v-row>\r\n                <v-col cols=\"4\">\r\n                  <h3 class=\"text-h6 mb-2\">Darija</h3>\r\n                  <v-list dense>\r\n                    <v-list-item v-for=\"(example, index) in currentWord.usageDarija\" :key=\"`darija-${index}`\">\r\n                      <v-list-item-content>\r\n                        <v-list-item-title class=\"darija-font\">{{ example }}</v-list-item-title>\r\n                      </v-list-item-content>\r\n                      <v-list-item-action>\r\n                        <v-btn icon small @click=\"speakExample(example)\">\r\n                          <v-icon>mdi-volume-high</v-icon>\r\n                        </v-btn>\r\n                      </v-list-item-action>\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-col>\r\n                \r\n                <v-col cols=\"4\">\r\n                  <h3 class=\"text-h6 mb-2\">French</h3>\r\n                  <v-list dense>\r\n                    <v-list-item v-for=\"(example, index) in currentWord.usageFrench\" :key=\"`french-${index}`\">\r\n                      <v-list-item-content>\r\n                        <v-list-item-title class=\"french-font\">{{ example }}</v-list-item-title>\r\n                      </v-list-item-content>\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-col>\r\n                \r\n                <v-col cols=\"4\">\r\n                  <h3 class=\"text-h6 mb-2\">English</h3>\r\n                  <v-list dense>\r\n                    <v-list-item v-for=\"(example, index) in currentWord.usageEnglish\" :key=\"`english-${index}`\">\r\n                      <v-list-item-content>\r\n                        <v-list-item-title class=\"english-font\">{{ example }}</v-list-item-title>\r\n                      </v-list-item-content>\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-col>\r\n              </v-row>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n  \r\n      <v-dialog v-model=\"phoneticDialog\" max-width=\"500px\">\r\n        <v-card>\r\n          <v-card-title>Suggest Phonetic Correction</v-card-title>\r\n          <v-card-text>\r\n            <v-text-field\r\n              v-model=\"suggestedPhonetic\"\r\n              label=\"Suggested Phonetic Pronunciation\"\r\n              :placeholder=\"currentWord ? currentWord.phonetic : ''\"\r\n            ></v-text-field>\r\n            <v-btn @click=\"startRecording\" v-if=\"!isRecording\" color=\"primary\">\r\n              Start Recording\r\n            </v-btn>\r\n            <v-btn @click=\"stopRecording\" v-if=\"isRecording\" color=\"error\">\r\n              Stop Recording\r\n            </v-btn>\r\n            <audio v-if=\"audioUrl\" :src=\"audioUrl\" controls></audio>\r\n            <v-alert v-if=\"feedback\" :type=\"feedback.includes('Error') ? 'error' : 'success'\" class=\"mt-3\">\r\n              {{ feedback }}\r\n            </v-alert>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"primary\" text @click=\"submitPhoneticSuggestion\" :disabled=\"!suggestedPhonetic\">Submit</v-btn>\r\n            <v-btn color=\"grey\" text @click=\"phoneticDialog = false\">Cancel</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-dialog>\r\n    </v-container>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'DarijaLinguist',\r\n    setup() {\r\n      const words = ref([]);\r\n      const currentIndex = ref(0);\r\n      const loading = ref(false);\r\n      const error = ref(null);\r\n      const phoneticDialog = ref(false);\r\n      const suggestedPhonetic = ref('');\r\n      const isRecording = ref(false);\r\n      const audioUrl = ref('');\r\n      const feedback = ref('');\r\n      let mediaRecorder = null;\r\n      let audioChunks = [];\r\n  \r\n      const fetchWords = async () => {\r\n        loading.value = true;\r\n        error.value = null;\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/words');\r\n          words.value = response.data;\r\n        } catch (err) {\r\n          error.value = 'Failed to fetch words. Please try again.';\r\n          console.error('Error fetching words:', err);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      const currentWord = computed(() => words.value[currentIndex.value]);\r\n  \r\n      const nextWord = () => {\r\n        currentIndex.value = (currentIndex.value + 1) % words.value.length;\r\n      };\r\n  \r\n      const previousWord = () => {\r\n        currentIndex.value = (currentIndex.value - 1 + words.value.length) % words.value.length;\r\n      };\r\n  \r\n      const speak = (text) => {\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = 'ar-MA'; // Moroccan Arabic\r\n        speechSynthesis.speak(utterance);\r\n      };\r\n  \r\n      const speakWord = () => {\r\n        if (currentWord.value) {\r\n          speak(currentWord.value.darija);\r\n        }\r\n      };\r\n  \r\n      const speakExample = (example) => {\r\n        speak(example);\r\n      };\r\n  \r\n      const openPhoneticDialog = () => {\r\n        suggestedPhonetic.value = currentWord.value ? currentWord.value.phonetic : '';\r\n        phoneticDialog.value = true;\r\n      };\r\n  \r\n      const startRecording = async () => {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        mediaRecorder = new MediaRecorder(stream);\r\n        mediaRecorder.start();\r\n        isRecording.value = true;\r\n        audioChunks = [];\r\n        mediaRecorder.addEventListener(\"dataavailable\", event => {\r\n          audioChunks.push(event.data);\r\n        });\r\n        mediaRecorder.addEventListener(\"stop\", () => {\r\n          const audioBlob = new Blob(audioChunks);\r\n          audioUrl.value = URL.createObjectURL(audioBlob);\r\n          isRecording.value = false;\r\n        });\r\n      };\r\n  \r\n      const stopRecording = () => {\r\n        mediaRecorder.stop();\r\n      };\r\n  \r\n      const submitPhoneticSuggestion = async () => {\r\n        if (currentWord.value && suggestedPhonetic.value) {\r\n          try {\r\n            feedback.value = 'Submitting suggestion...';\r\n            console.log('Current word:', currentWord.value);\r\n            console.log('Suggestion data:', { suggestedPhonetic: suggestedPhonetic.value, audioUrl: audioUrl.value });\r\n            const response = await axios.post(`http://localhost:5000/api/words/${currentWord.value._id}/phonetic-suggestion`, {\r\n              suggestedPhonetic: suggestedPhonetic.value,\r\n              audioUrl: audioUrl.value\r\n            });\r\n            console.log('Server response:', response.data);\r\n            feedback.value = 'Suggestion submitted successfully!';\r\n            setTimeout(() => {\r\n              phoneticDialog.value = false;\r\n              feedback.value = '';\r\n              suggestedPhonetic.value = '';\r\n              audioUrl.value = '';\r\n            }, 2000);\r\n          } catch (err) {\r\n            console.error('Error submitting phonetic suggestion:', err);\r\n            if (err.response) {\r\n              console.error('Response data:', err.response.data);\r\n              console.error('Response status:', err.response.status);\r\n              console.error('Response headers:', err.response.headers);\r\n            } else if (err.request) {\r\n              console.error('No response received:', err.request);\r\n            } else {\r\n              console.error('Error setting up request:', err.message);\r\n            }\r\n            feedback.value = `Error submitting suggestion: ${err.response ? err.response.data.message : err.message}`;\r\n          }\r\n        } else {\r\n          feedback.value = 'Please enter a suggested pronunciation.';\r\n        }\r\n      };\r\n  \r\n      onMounted(fetchWords);\r\n  \r\n      return {\r\n        currentWord,\r\n        nextWord,\r\n        previousWord,\r\n        speakWord,\r\n        speakExample,\r\n        loading,\r\n        error,\r\n        phoneticDialog,\r\n        suggestedPhonetic,\r\n        openPhoneticDialog,\r\n        submitPhoneticSuggestion,\r\n        startRecording,\r\n        stopRecording,\r\n        isRecording,\r\n        audioUrl,\r\n        feedback\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .darija-linguist {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .darija-font {\r\n    font-family: 'Scheherazade', 'Amiri', serif;\r\n    font-size: 1.2em;\r\n    text-align: right; /* Align Arabic text to the right */\r\n  }\r\n  \r\n  .french-font {\r\n    font-family: 'Roboto', 'Arial', sans-serif;\r\n    font-size: 1.1em;\r\n  }\r\n  \r\n  .english-font {\r\n    font-family: 'Roboto', 'Arial', sans-serif;\r\n    font-size: 1.1em;\r\n  }\r\n  \r\n  /* Ensure consistent height for list items */\r\n  .v-list-item {\r\n    height: auto !important;\r\n    min-height: 48px;\r\n  }\r\n  </style>"],"mappings":";;;;AAmIE,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAC9C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,YAAW,GAAIP,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMQ,OAAM,GAAIR,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMS,KAAI,GAAIT,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMU,cAAa,GAAIV,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMW,iBAAgB,GAAIX,GAAG,CAAC,EAAE,CAAC;IACjC,MAAMY,WAAU,GAAIZ,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMa,QAAO,GAAIb,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMc,QAAO,GAAId,GAAG,CAAC,EAAE,CAAC;IACxB,IAAIe,aAAY,GAAI,IAAI;IACxB,IAAIC,WAAU,GAAI,EAAE;IAEpB,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7BT,OAAO,CAACU,KAAI,GAAI,IAAI;MACpBT,KAAK,CAACS,KAAI,GAAI,IAAI;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,iCAAiC,CAAC;QACnEd,KAAK,CAACY,KAAI,GAAIC,QAAQ,CAACE,IAAI;MAC7B,EAAE,OAAOC,GAAG,EAAE;QACZb,KAAK,CAACS,KAAI,GAAI,0CAA0C;QACxDK,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEa,GAAG,CAAC;MAC7C,UAAU;QACRd,OAAO,CAACU,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAED,MAAMM,WAAU,GAAIvB,QAAQ,CAAC,MAAMK,KAAK,CAACY,KAAK,CAACX,YAAY,CAACW,KAAK,CAAC,CAAC;IAEnE,MAAMO,QAAO,GAAIA,CAAA,KAAM;MACrBlB,YAAY,CAACW,KAAI,GAAI,CAACX,YAAY,CAACW,KAAI,GAAI,CAAC,IAAIZ,KAAK,CAACY,KAAK,CAACQ,MAAM;IACpE,CAAC;IAED,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzBpB,YAAY,CAACW,KAAI,GAAI,CAACX,YAAY,CAACW,KAAI,GAAI,IAAIZ,KAAK,CAACY,KAAK,CAACQ,MAAM,IAAIpB,KAAK,CAACY,KAAK,CAACQ,MAAM;IACzF,CAAC;IAED,MAAME,KAAI,GAAKC,IAAI,IAAK;MACtB,MAAMC,SAAQ,GAAI,IAAIC,wBAAwB,CAACF,IAAI,CAAC;MACpDC,SAAS,CAACE,IAAG,GAAI,OAAO,EAAE;MAC1BC,eAAe,CAACL,KAAK,CAACE,SAAS,CAAC;IAClC,CAAC;IAED,MAAMI,SAAQ,GAAIA,CAAA,KAAM;MACtB,IAAIV,WAAW,CAACN,KAAK,EAAE;QACrBU,KAAK,CAACJ,WAAW,CAACN,KAAK,CAACiB,MAAM,CAAC;MACjC;IACF,CAAC;IAED,MAAMC,YAAW,GAAKC,OAAO,IAAK;MAChCT,KAAK,CAACS,OAAO,CAAC;IAChB,CAAC;IAED,MAAMC,kBAAiB,GAAIA,CAAA,KAAM;MAC/B3B,iBAAiB,CAACO,KAAI,GAAIM,WAAW,CAACN,KAAI,GAAIM,WAAW,CAACN,KAAK,CAACqB,QAAO,GAAI,EAAE;MAC7E7B,cAAc,CAACQ,KAAI,GAAI,IAAI;IAC7B,CAAC;IAED,MAAMsB,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,MAAMC,MAAK,GAAI,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzE9B,aAAY,GAAI,IAAI+B,aAAa,CAACL,MAAM,CAAC;MACzC1B,aAAa,CAACgC,KAAK,CAAC,CAAC;MACrBnC,WAAW,CAACM,KAAI,GAAI,IAAI;MACxBF,WAAU,GAAI,EAAE;MAChBD,aAAa,CAACiC,gBAAgB,CAAC,eAAe,EAAEC,KAAI,IAAK;QACvDjC,WAAW,CAACkC,IAAI,CAACD,KAAK,CAAC5B,IAAI,CAAC;MAC9B,CAAC,CAAC;MACFN,aAAa,CAACiC,gBAAgB,CAAC,MAAM,EAAE,MAAM;QAC3C,MAAMG,SAAQ,GAAI,IAAIC,IAAI,CAACpC,WAAW,CAAC;QACvCH,QAAQ,CAACK,KAAI,GAAImC,GAAG,CAACC,eAAe,CAACH,SAAS,CAAC;QAC/CvC,WAAW,CAACM,KAAI,GAAI,KAAK;MAC3B,CAAC,CAAC;IACJ,CAAC;IAED,MAAMqC,aAAY,GAAIA,CAAA,KAAM;MAC1BxC,aAAa,CAACyC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,MAAMC,wBAAuB,GAAI,MAAAA,CAAA,KAAY;MAC3C,IAAIjC,WAAW,CAACN,KAAI,IAAKP,iBAAiB,CAACO,KAAK,EAAE;QAChD,IAAI;UACFJ,QAAQ,CAACI,KAAI,GAAI,0BAA0B;UAC3CK,OAAO,CAACmC,GAAG,CAAC,eAAe,EAAElC,WAAW,CAACN,KAAK,CAAC;UAC/CK,OAAO,CAACmC,GAAG,CAAC,kBAAkB,EAAE;YAAE/C,iBAAiB,EAAEA,iBAAiB,CAACO,KAAK;YAAEL,QAAQ,EAAEA,QAAQ,CAACK;UAAM,CAAC,CAAC;UACzG,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACwD,IAAI,CAAC,mCAAmCnC,WAAW,CAACN,KAAK,CAAC0C,GAAG,sBAAsB,EAAE;YAChHjD,iBAAiB,EAAEA,iBAAiB,CAACO,KAAK;YAC1CL,QAAQ,EAAEA,QAAQ,CAACK;UACrB,CAAC,CAAC;UACFK,OAAO,CAACmC,GAAG,CAAC,kBAAkB,EAAEvC,QAAQ,CAACE,IAAI,CAAC;UAC9CP,QAAQ,CAACI,KAAI,GAAI,oCAAoC;UACrD2C,UAAU,CAAC,MAAM;YACfnD,cAAc,CAACQ,KAAI,GAAI,KAAK;YAC5BJ,QAAQ,CAACI,KAAI,GAAI,EAAE;YACnBP,iBAAiB,CAACO,KAAI,GAAI,EAAE;YAC5BL,QAAQ,CAACK,KAAI,GAAI,EAAE;UACrB,CAAC,EAAE,IAAI,CAAC;QACV,EAAE,OAAOI,GAAG,EAAE;UACZC,OAAO,CAACd,KAAK,CAAC,uCAAuC,EAAEa,GAAG,CAAC;UAC3D,IAAIA,GAAG,CAACH,QAAQ,EAAE;YAChBI,OAAO,CAACd,KAAK,CAAC,gBAAgB,EAAEa,GAAG,CAACH,QAAQ,CAACE,IAAI,CAAC;YAClDE,OAAO,CAACd,KAAK,CAAC,kBAAkB,EAAEa,GAAG,CAACH,QAAQ,CAAC2C,MAAM,CAAC;YACtDvC,OAAO,CAACd,KAAK,CAAC,mBAAmB,EAAEa,GAAG,CAACH,QAAQ,CAAC4C,OAAO,CAAC;UAC1D,OAAO,IAAIzC,GAAG,CAAC0C,OAAO,EAAE;YACtBzC,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEa,GAAG,CAAC0C,OAAO,CAAC;UACrD,OAAO;YACLzC,OAAO,CAACd,KAAK,CAAC,2BAA2B,EAAEa,GAAG,CAAC2C,OAAO,CAAC;UACzD;UACAnD,QAAQ,CAACI,KAAI,GAAI,gCAAgCI,GAAG,CAACH,QAAO,GAAIG,GAAG,CAACH,QAAQ,CAACE,IAAI,CAAC4C,OAAM,GAAI3C,GAAG,CAAC2C,OAAO,EAAE;QAC3G;MACF,OAAO;QACLnD,QAAQ,CAACI,KAAI,GAAI,yCAAyC;MAC5D;IACF,CAAC;IAEDhB,SAAS,CAACe,UAAU,CAAC;IAErB,OAAO;MACLO,WAAW;MACXC,QAAQ;MACRE,YAAY;MACZO,SAAS;MACTE,YAAY;MACZ5B,OAAO;MACPC,KAAK;MACLC,cAAc;MACdC,iBAAiB;MACjB2B,kBAAkB;MAClBmB,wBAAwB;MACxBjB,cAAc;MACde,aAAa;MACb3C,WAAW;MACXC,QAAQ;MACRC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}