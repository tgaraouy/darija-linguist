{"ast":null,"code":"import { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport QuizMode from './QuizMode.vue';\nexport default {\n  name: 'DarijaLinguist',\n  components: {\n    QuizMode\n  },\n  setup() {\n    const words = ref([]);\n    const filteredWords = ref([]);\n    const currentWordIndex = ref(0);\n    const loading = ref(false);\n    const error = ref(null);\n    const searchTerm = ref('');\n    const activeTab = ref('learn');\n    const fetchWords = async () => {\n      loading.value = true;\n      error.value = null;\n      try {\n        const response = await axios.get('http://localhost:5000/api/words');\n        words.value = response.data;\n        filteredWords.value = response.data;\n      } catch (err) {\n        error.value = 'Failed to fetch words. Please try again.';\n        console.error('Error fetching words:', err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const currentWord = computed(() => filteredWords.value[currentWordIndex.value]);\n    const nextWord = () => {\n      currentWordIndex.value = (currentWordIndex.value + 1) % filteredWords.value.length;\n    };\n    const previousWord = () => {\n      currentWordIndex.value = (currentWordIndex.value - 1 + filteredWords.value.length) % filteredWords.value.length;\n    };\n    const speakWord = () => {\n      if (currentWord.value) {\n        const utterance = new SpeechSynthesisUtterance(currentWord.value.darija);\n        utterance.lang = 'ar-MA'; // Moroccan Arabic\n        speechSynthesis.speak(utterance);\n      }\n    };\n    const searchWords = () => {\n      filteredWords.value = words.value.filter(word => word.darija.toLowerCase().includes(searchTerm.value.toLowerCase()) || word.phonetic.toLowerCase().includes(searchTerm.value.toLowerCase()));\n      currentWordIndex.value = 0;\n    };\n    watch(searchTerm, searchWords);\n    onMounted(fetchWords);\n    return {\n      currentWord,\n      nextWord,\n      previousWord,\n      speakWord,\n      loading,\n      error,\n      searchTerm,\n      activeTab,\n      words\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","axios","QuizMode","name","components","setup","words","filteredWords","currentWordIndex","loading","error","searchTerm","activeTab","fetchWords","value","response","get","data","err","console","currentWord","nextWord","length","previousWord","speakWord","utterance","SpeechSynthesisUtterance","darija","lang","speechSynthesis","speak","searchWords","filter","word","toLowerCase","includes","phonetic"],"sources":["C:\\darija-linguist\\frontend\\src\\components\\DarijaLinguist.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n      <h1 class=\"text-h3 mb-5 text-center\">Darija Linguist</h1>\r\n      \r\n      <v-text-field\r\n        v-model=\"searchTerm\"\r\n        label=\"Search words\"\r\n        @input=\"searchWords\"\r\n      ></v-text-field>\r\n  \r\n      <v-tabs v-model=\"activeTab\">\r\n        <v-tab value=\"learn\">Learn</v-tab>\r\n        <v-tab value=\"quiz\">Quiz</v-tab>\r\n      </v-tabs>\r\n  \r\n      <v-window v-model=\"activeTab\">\r\n        <v-window-item value=\"learn\">\r\n          <v-row v-if=\"loading\">\r\n            <v-col class=\"text-center\">\r\n              <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\r\n            </v-col>\r\n          </v-row>\r\n  \r\n          <v-row v-else-if=\"error\">\r\n            <v-col class=\"text-center\">\r\n              <v-alert type=\"error\">{{ error }}</v-alert>\r\n            </v-col>\r\n          </v-row>\r\n  \r\n          <v-row v-else-if=\"currentWord\">\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-card>\r\n                <v-card-title>{{ currentWord.darija }}</v-card-title>\r\n                <v-card-subtitle>{{ currentWord.phonetic }}</v-card-subtitle>\r\n                <v-card-text>\r\n                  <v-btn @click=\"speakWord\">Speak</v-btn>\r\n                </v-card-text>\r\n              </v-card>\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-card>\r\n                <v-card-title>Details</v-card-title>\r\n                <v-card-text>\r\n                  <p><strong>Arabic Script:</strong> {{ currentWord.arabicScript }}</p>\r\n                  <p><strong>MSA Equivalent:</strong> {{ currentWord.msaEquivalent }}</p>\r\n                  <p><strong>Region:</strong> {{ currentWord.region }}</p>\r\n                  <v-expansion-panels>\r\n                    <v-expansion-panel>\r\n                      <v-expansion-panel-title>Usage Examples</v-expansion-panel-title>\r\n                      <v-expansion-panel-text>\r\n                        <p v-for=\"(example, index) in currentWord.usageDarija\" :key=\"index\">\r\n                          {{ example }}\r\n                        </p>\r\n                      </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                  </v-expansion-panels>\r\n                </v-card-text>\r\n              </v-card>\r\n            </v-col>\r\n          </v-row>\r\n  \r\n          <v-row v-else>\r\n            <v-col class=\"text-center\">\r\n              <p>No words available</p>\r\n            </v-col>\r\n          </v-row>\r\n  \r\n          <v-row>\r\n            <v-col class=\"text-center\">\r\n              <v-btn @click=\"previousWord\" class=\"mr-2\">Previous</v-btn>\r\n              <v-btn @click=\"nextWord\">Next</v-btn>\r\n            </v-col>\r\n          </v-row>\r\n        </v-window-item>\r\n  \r\n        <v-window-item value=\"quiz\">\r\n          <QuizMode :words=\"words\" />\r\n        </v-window-item>\r\n      </v-window>\r\n    </v-container>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed, onMounted, watch } from 'vue';\r\n  import axios from 'axios';\r\n  import QuizMode from './QuizMode.vue';\r\n  \r\n  export default {\r\n    name: 'DarijaLinguist',\r\n    components: {\r\n      QuizMode,\r\n    },\r\n    setup() {\r\n      const words = ref([]);\r\n      const filteredWords = ref([]);\r\n      const currentWordIndex = ref(0);\r\n      const loading = ref(false);\r\n      const error = ref(null);\r\n      const searchTerm = ref('');\r\n      const activeTab = ref('learn');\r\n  \r\n      const fetchWords = async () => {\r\n        loading.value = true;\r\n        error.value = null;\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/words');\r\n          words.value = response.data;\r\n          filteredWords.value = response.data;\r\n        } catch (err) {\r\n          error.value = 'Failed to fetch words. Please try again.';\r\n          console.error('Error fetching words:', err);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      const currentWord = computed(() => filteredWords.value[currentWordIndex.value]);\r\n  \r\n      const nextWord = () => {\r\n        currentWordIndex.value = (currentWordIndex.value + 1) % filteredWords.value.length;\r\n      };\r\n  \r\n      const previousWord = () => {\r\n        currentWordIndex.value = (currentWordIndex.value - 1 + filteredWords.value.length) % filteredWords.value.length;\r\n      };\r\n  \r\n      const speakWord = () => {\r\n        if (currentWord.value) {\r\n          const utterance = new SpeechSynthesisUtterance(currentWord.value.darija);\r\n          utterance.lang = 'ar-MA'; // Moroccan Arabic\r\n          speechSynthesis.speak(utterance);\r\n        }\r\n      };\r\n  \r\n      const searchWords = () => {\r\n        filteredWords.value = words.value.filter(word => \r\n          word.darija.toLowerCase().includes(searchTerm.value.toLowerCase()) ||\r\n          word.phonetic.toLowerCase().includes(searchTerm.value.toLowerCase())\r\n        );\r\n        currentWordIndex.value = 0;\r\n      };\r\n  \r\n      watch(searchTerm, searchWords);\r\n  \r\n      onMounted(fetchWords);\r\n  \r\n      return {\r\n        currentWord,\r\n        nextWord,\r\n        previousWord,\r\n        speakWord,\r\n        loading,\r\n        error,\r\n        searchTerm,\r\n        activeTab,\r\n        words,\r\n      };\r\n    },\r\n  };\r\n  </script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}