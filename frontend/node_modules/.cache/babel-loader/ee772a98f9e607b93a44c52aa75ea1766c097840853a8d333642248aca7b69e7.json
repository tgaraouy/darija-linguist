{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'DarijaLinguist',\n  setup() {\n    const words = ref([]);\n    const currentIndex = ref(0);\n    const loading = ref(false);\n    const error = ref(null);\n    const fetchWords = async () => {\n      loading.value = true;\n      error.value = null;\n      try {\n        const response = await axios.get('http://localhost:5000/api/words');\n        words.value = response.data;\n      } catch (err) {\n        error.value = 'Failed to fetch words. Please try again.';\n        console.error('Error fetching words:', err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const currentWord = computed(() => words.value[currentIndex.value]);\n    const nextWord = () => {\n      currentIndex.value = (currentIndex.value + 1) % words.value.length;\n    };\n    const previousWord = () => {\n      currentIndex.value = (currentIndex.value - 1 + words.value.length) % words.value.length;\n    };\n    const speakWord = () => {\n      if (currentWord.value) {\n        const utterance = new SpeechSynthesisUtterance(currentWord.value.darija);\n        utterance.lang = 'ar-MA'; // Moroccan Arabic\n        speechSynthesis.speak(utterance);\n      }\n    };\n    onMounted(fetchWords);\n    return {\n      currentWord,\n      nextWord,\n      previousWord,\n      speakWord,\n      loading,\n      error\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","name","setup","words","currentIndex","loading","error","fetchWords","value","response","get","data","err","console","currentWord","nextWord","length","previousWord","speakWord","utterance","SpeechSynthesisUtterance","darija","lang","speechSynthesis","speak"],"sources":["C:\\darija-linguist\\frontend\\src\\components\\DarijaLinguist.vue"],"sourcesContent":["<template>\r\n    <v-container class=\"darija-linguist\">\r\n      <v-row justify=\"center\">\r\n        <v-col cols=\"12\" md=\"8\">\r\n          <h1 class=\"text-h3 mb-6 text-center primary--text\">Darija Linguist</h1>\r\n  \r\n          <v-card v-if=\"loading\" class=\"text-center pa-6\">\r\n            <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\r\n          </v-card>\r\n  \r\n          <v-alert v-else-if=\"error\" type=\"error\" class=\"mb-6\">{{ error }}</v-alert>\r\n  \r\n          <template v-else-if=\"currentWord\">\r\n            <v-card class=\"mb-6\">\r\n              <v-card-title class=\"text-h4 justify-center\">{{ currentWord.darija }}</v-card-title>\r\n              <v-card-subtitle class=\"text-h6 text-center\">{{ currentWord.phonetic }}</v-card-subtitle>\r\n              <v-card-text class=\"text-center\">\r\n                <v-btn color=\"primary\" @click=\"speakWord\" class=\"mx-2\">\r\n                  <v-icon left>mdi-volume-high</v-icon> Speak\r\n                </v-btn>\r\n              </v-card-text>\r\n            </v-card>\r\n  \r\n            <v-card class=\"mb-6\">\r\n              <v-card-title>Word Details</v-card-title>\r\n              <v-card-text>\r\n                <v-row>\r\n                  <v-col cols=\"12\" sm=\"6\">\r\n                    <strong>Arabic Script:</strong> {{ currentWord.arabicScript }}\r\n                  </v-col>\r\n                  <v-col cols=\"12\" sm=\"6\">\r\n                    <strong>MSA Equivalent:</strong> {{ currentWord.msaEquivalent }}\r\n                  </v-col>\r\n                  <v-col cols=\"12\">\r\n                    <strong>Region:</strong> {{ currentWord.region }}\r\n                  </v-col>\r\n                </v-row>\r\n              </v-card-text>\r\n            </v-card>\r\n  \r\n            <v-card-actions class=\"justify-center\">\r\n              <v-btn @click=\"previousWord\" class=\"mx-2\">\r\n                <v-icon left>mdi-chevron-left</v-icon> Previous\r\n              </v-btn>\r\n              <v-btn @click=\"nextWord\" class=\"mx-2\">\r\n                Next <v-icon right>mdi-chevron-right</v-icon>\r\n              </v-btn>\r\n            </v-card-actions>\r\n          </template>\r\n  \r\n          <v-card v-else class=\"text-center pa-6\">\r\n            <p>No words available</p>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'DarijaLinguist',\r\n    setup() {\r\n      const words = ref([]);\r\n      const currentIndex = ref(0);\r\n      const loading = ref(false);\r\n      const error = ref(null);\r\n  \r\n      const fetchWords = async () => {\r\n        loading.value = true;\r\n        error.value = null;\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/words');\r\n          words.value = response.data;\r\n        } catch (err) {\r\n          error.value = 'Failed to fetch words. Please try again.';\r\n          console.error('Error fetching words:', err);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      const currentWord = computed(() => words.value[currentIndex.value]);\r\n  \r\n      const nextWord = () => {\r\n        currentIndex.value = (currentIndex.value + 1) % words.value.length;\r\n      };\r\n  \r\n      const previousWord = () => {\r\n        currentIndex.value = (currentIndex.value - 1 + words.value.length) % words.value.length;\r\n      };\r\n  \r\n      const speakWord = () => {\r\n        if (currentWord.value) {\r\n          const utterance = new SpeechSynthesisUtterance(currentWord.value.darija);\r\n          utterance.lang = 'ar-MA'; // Moroccan Arabic\r\n          speechSynthesis.speak(utterance);\r\n        }\r\n      };\r\n  \r\n      onMounted(fetchWords);\r\n  \r\n      return {\r\n        currentWord,\r\n        nextWord,\r\n        previousWord,\r\n        speakWord,\r\n        loading,\r\n        error,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .darija-linguist {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n  }\r\n  </style>"],"mappings":"AA2DE,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAC9C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,YAAW,GAAIP,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMQ,OAAM,GAAIR,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMS,KAAI,GAAIT,GAAG,CAAC,IAAI,CAAC;IAEvB,MAAMU,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7BF,OAAO,CAACG,KAAI,GAAI,IAAI;MACpBF,KAAK,CAACE,KAAI,GAAI,IAAI;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC;QACnEP,KAAK,CAACK,KAAI,GAAIC,QAAQ,CAACE,IAAI;MAC7B,EAAE,OAAOC,GAAG,EAAE;QACZN,KAAK,CAACE,KAAI,GAAI,0CAA0C;QACxDK,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEM,GAAG,CAAC;MAC7C,UAAU;QACRP,OAAO,CAACG,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAED,MAAMM,WAAU,GAAIhB,QAAQ,CAAC,MAAMK,KAAK,CAACK,KAAK,CAACJ,YAAY,CAACI,KAAK,CAAC,CAAC;IAEnE,MAAMO,QAAO,GAAIA,CAAA,KAAM;MACrBX,YAAY,CAACI,KAAI,GAAI,CAACJ,YAAY,CAACI,KAAI,GAAI,CAAC,IAAIL,KAAK,CAACK,KAAK,CAACQ,MAAM;IACpE,CAAC;IAED,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzBb,YAAY,CAACI,KAAI,GAAI,CAACJ,YAAY,CAACI,KAAI,GAAI,IAAIL,KAAK,CAACK,KAAK,CAACQ,MAAM,IAAIb,KAAK,CAACK,KAAK,CAACQ,MAAM;IACzF,CAAC;IAED,MAAME,SAAQ,GAAIA,CAAA,KAAM;MACtB,IAAIJ,WAAW,CAACN,KAAK,EAAE;QACrB,MAAMW,SAAQ,GAAI,IAAIC,wBAAwB,CAACN,WAAW,CAACN,KAAK,CAACa,MAAM,CAAC;QACxEF,SAAS,CAACG,IAAG,GAAI,OAAO,EAAE;QAC1BC,eAAe,CAACC,KAAK,CAACL,SAAS,CAAC;MAClC;IACF,CAAC;IAEDpB,SAAS,CAACQ,UAAU,CAAC;IAErB,OAAO;MACLO,WAAW;MACXC,QAAQ;MACRE,YAAY;MACZC,SAAS;MACTb,OAAO;MACPC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}